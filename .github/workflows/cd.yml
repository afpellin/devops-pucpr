name: Docker CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do código
      - name: Checkout do código
        uses: actions/checkout@v3

      # 2️⃣ Configurar Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3️⃣ Instalar dependências
      - name: Instalar dependências
        run: npm install

      # 4️⃣ Rodar testes
      - name: Rodar testes
        run: npm test

      # 5️⃣ Build da imagem Docker
      - name: Build da imagem Docker
        run: docker build -t devops-pucpr .

      # 6️⃣ Login no DockerHub
      - name: Login no DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 7️⃣ Tag e push da imagem
      - name: Tag e push da imagem
        run: |
          # Tag latest
          docker tag devops-pucpr ${{ secrets.DOCKER_USERNAME }}/devops-pucpr:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/devops-pucpr:latest
          
          # Tag com hash do commit
          docker tag devops-pucpr ${{ secrets.DOCKER_USERNAME }}/devops-pucpr:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/devops-pucpr:${{ github.sha }}

      # 8️⃣ Notificar Discord
      - name: Notificar Discord sobre deploy
        run: |
          curl -H "Content-Type: application/json" \
               -d "{\"content\": \"✅ Deploy finalizado!\nBranch: main\nImagem DockerHub: ${{ secrets.DOCKER_USERNAME }}/devops-pucpr:latest\nCommit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}\"}" \
               ${{ secrets.DISCORD_WEBHOOK }}
